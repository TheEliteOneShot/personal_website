version: '3.7'

services:
  # backend:
  #   container_name: backend
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   image: website-backend:latest
  #   restart: always
  #   ports:
  #     - ${BACKEND_PORT}:5000
  #   environment:
  #     DATABASE_PORT: ${DATABASE_PORT}
  #     DATABASE_HOST: ${DATABASE_HOST}
  #     DATABASE_PROTOCOL: ${DATABASE_PROTOCOL}

  # database:
  #   build:
  #     context: ./database
  #     dockerfile: Dockerfile
  #   container_name: database
  #   restart: always
  #   image: website-database:latest
  #   ports:
  #     - ${DATABASE_PORT}:5432
  #   environment:
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #   volumes:
  #     # - ./sql/table.sql:/docker-entrypoint-initdb.d/table.sql
  #     - postgres_data:/var/lib/postgresql/data

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        BACKEND_PORT: ${BACKEND_PORT}
        BACKEND_HOST: ${BACKEND_HOST}
        BACKEND_PROTOCOL: ${BACKEND_PROTOCOL}
        BACKEND_PREFIX: ${BACKEND_PREFIX}
    image: website-frontend:latest
    ports:
      - ${FRONTEND_PORT}:80

volumes:
  postgres_data:
    name: postgres_data
