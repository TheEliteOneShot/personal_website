version: '3.7'

services:
  database:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: database
    restart: always
    image: website-database:latest
    ports:
      - ${DATABASE_PORT}:5432
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: website-backend:latest
    restart: always
    ports:
      - ${BACKEND_PORT}:5000
    environment:
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    depends_on:
      - database

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        BACKEND_PORT: ${BACKEND_PORT}
        BACKEND_HOST: ${BACKEND_HOST}
        BACKEND_PROTOCOL: ${BACKEND_PROTOCOL}
        BACKEND_PREFIX: ${BACKEND_PREFIX}
    image: website-frontend:latest
    ports:
      - ${FRONTEND_PORT}:80
    depends_on:
      - backend

volumes:
  postgres_data:
    name: postgres_data
