version: '3.8'

networks:
  backend:

services:

  database:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: database
    restart: always
    image: theeliteoneshot/website-database:latest
    networks:
      - backend
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: theeliteoneshot/website-backend:latest
    restart: always
    networks:
      - backend
    environment:
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    depends_on:
      - database
    
  reverseproxy:
    build:
      context: ./reverseproxy
      dockerfile: Dockerfile
    container_name: reverseproxy
    restart: always
    image: theeliteoneshot/website-reverseproxy:latest
    networks:
      - backend
    environment:
      ORIGIN_DOMAIN: ${ORIGIN_DOMAIN}
      ORIGIN_DOMAIN_PROTOCOL: ${ORIGIN_DOMAIN_PROTOCOL}
      ORIGIN_DOMAIN_PORT: ${ORIGIN_DOMAIN_PORT}
      ORIGIN_ALLOW_METHOD: ${ORIGIN_ALLOW_METHOD}
      ORIGIN_ALLOW_CREDENTIALS: ${ORIGIN_ALLOW_CREDENTIALS}
    ports:
      - ${REVERSEPROXY_PORT}:80
    depends_on:
      - backend

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:

        # Development
        # BACKEND_PORT: ${REVERSEPROXY_PORT}
        # BACKEND_HOST: ${REVERSEPROXY_HOST}
        # BACKEND_PROTOCOL: ${REVERSEPROXY_PROTOCOL}
        # BACKEND_PREFIX: ${REVERSEPROXY_PREFIX}

        # Production
        BACKEND_PORT: 443
        BACKEND_HOST: api.zacharylaney.com
        BACKEND_PROTOCOL: https
        BACKEND_PREFIX: ${BACKEND_PREFIX}
    environment:
      ORIGIN_DOMAIN: ${ORIGIN_DOMAIN}
      ORIGIN_DOMAIN_PROTOCOL: ${ORIGIN_DOMAIN_PROTOCOL}

    image: theeliteoneshot/website-frontend:latest
    ports:
      - ${FRONTEND_PORT}:80
    depends_on:
      - reverseproxy

volumes:
  postgres_data:
    name: postgres_data
