version: '3.8'

networks:
  backend:

services:

  database:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: database
    restart: always
    image: theeliteoneshot/website-database:latest
    networks:
      - backend
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: theeliteoneshot/website-backend:latest
    restart: always
    networks:
      - backend
    environment:
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    depends_on:
      - database
    
  reverseproxy:
    build:
      context: ./reverseproxy/production
      dockerfile: Dockerfile
    container_name: reverseproxy
    restart: always
    image: theeliteoneshot/website-reverseproxy:latest
    networks:
      - backend
    environment:
      ORIGIN_DOMAIN: ${ORIGIN_DOMAIN}
      ORIGIN_ALLOW_METHOD: ${ORIGIN_ALLOW_METHOD}
      ORIGIN_ALLOW_CREDENTIALS: ${ORIGIN_ALLOW_CREDENTIALS}
    ports:
      - ${REVERSEPROXY_PORT}:80
    # depends_on:
    #   - backend

  iam:
    build:
      context: ./keycloak
      dockerfile: Dockerfile
    container_name: iam
    image: theeliteoneshot/website-iam:latest
    networks:
      - backend
    environment:
        DB_VENDOR: postgres
        DB_ADDR: database
        DB_DATABASE: postgres
        DB_PORT: 5432
        DB_USER: postgres
        DB_SCHEMA: public
        DB_PASSWORD: password
        KEYCLOAK_LOGLEVEL: ${IAM_LOGLEVEL}
        ROOT_LOGLEVEL: ${IAM_ROOT_LOGLEVEL}
        KEYCLOAK_USER: ${IAM_USER}
        KEYCLOAK_PASSWORD: ${IAM_PASSWORD}
        PROXY_ADDRESS_FORWARDING: "true"
    depends_on:
      - database
    volumes:
      - ./keycloak/realms/export:/tmp/export

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        BACKEND_PORT: 443
        BACKEND_HOST: api.zacharylaney.com
        BACKEND_PROTOCOL: https
        BACKEND_PREFIX: ${BACKEND_PREFIX}
        
    environment:
      ORIGIN_DOMAIN: ${ORIGIN_DOMAIN}
    image: theeliteoneshot/website-frontend:latest
    ports:
      - ${FRONTEND_PORT}:80
    depends_on:
      - reverseproxy